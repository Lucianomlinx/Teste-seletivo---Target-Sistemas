
int INDICE = 12, SOMA = 0, K = 1;

enquanto K < INDICE faça {
    K = K + 1;
    SOMA = SOMA + K;
}
imprimir(SOMA);


1. Inicialmente, temos:
   - `INDICE = 12`
   - `SOMA = 0`
   - `K = 1`

2. O loop **enquanto K < INDICE** continua até que `K` seja igual ou maior que 12. Dentro do loop, em cada iteração, o valor de `K` é incrementado em 1 e o valor de `SOMA` é atualizado somando o novo valor de `K`.

3. Vamos ver as iterações do loop:

   - 1ª iteração: `K = 2`, `SOMA = 0 + 2 = 2`
   - 2ª iteração: `K = 3`, `SOMA = 2 + 3 = 5`
   - 3ª iteração: `K = 4`, `SOMA = 5 + 4 = 9`
   - 4ª iteração: `K = 5`, `SOMA = 9 + 5 = 14`
   - 5ª iteração: `K = 6`, `SOMA = 14 + 6 = 20`
   - 6ª iteração: `K = 7`, `SOMA = 20 + 7 = 27`
   - 7ª iteração: `K = 8`, `SOMA = 27 + 8 = 35`
   - 8ª iteração: `K = 9`, `SOMA = 35 + 9 = 44`
   - 9ª iteração: `K = 10`, `SOMA = 44 + 10 = 54`
   - 10ª iteração: `K = 11`, `SOMA = 54 + 11 = 65`
   - 11ª iteração: `K = 12`, o loop termina porque `K` não é menor que `INDICE`.



Após o término do loop, o valor da variável `SOMA` será 65.
